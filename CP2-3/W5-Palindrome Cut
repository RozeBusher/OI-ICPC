/****************************************
Definition:
Palindrome is a string that reads the same forward and backwawrd.

Examples:
aba, 1234321

Problem: 
Your are given a string and your job is to figure out the minumum number of cuts you need to split this string so that each substring is a palindrome. For instance, you need to cut aba12321LOL at least 2 times to make its substrings palindromes.

Input Format
Input has mutilple testcases.
The first line is the number of cases represented by T .
The following T lines are strings you need to cut.

Constraints
1 <= len(string) <= 5000

Output Format
Minumum nuber of cuts

Sample Input 0
2
aba12321LOL
12112

Sample Output 0
2
1
****************************************/
#include <bits/stdc++.h>
using namespace std;
#define INF 0x3f3f3f3f
int T;
string s;
int main(){
    cin>>T;
    while(T--){
        cin>>s;
        int l=s.length(), v[l]={0};
        bool f[l][l]={0};
        for(int i=0;i<l;f[i][i]=1, ++i);
        for(int i=2;i<=l;++i)
            for(int j=0;j<l-i+1;++j){
                int t=i+j-1;
                f[j][t]=i==2?!(s[j]-s[t]):f[j][t]=!(s[j]-s[t])&&f[j+1][t-1];
            }
        for(int i=0;i<l;++i)
            if(f[0][i]) v[i]=0;
            else{
                v[i]=INF;
                for(int j=0;j<i;++j) v[i]=f[j+1][i]&&v[j]<v[i]-1?v[j]+1:v[i];
            }
       cout<<v[l-1]<<endl;
    }
}

int minD(int dist[], int spt[], int len) {
    int min=INT_MAX, ind;  
    for(int i=0;i<len;++i) if(!spt[i]&&dist[i]<=min) min=dist[i], ind=i;
    return ind;
}
void dijk(int src, int len) {	//len: # of nodes in graph
    int *dist=new int[len], *spt=new int[len];
    for(int i=0;i<len;++i) dist[i]=INT_MAX, spt[i]=0;
    dist[src]=0;
    for(int i=0;i<len-1;++i){
        int u=minD(dist, spt, len);
        spt[u]=1;
        for(int j=0;j<len;++j) 
            if(!spt[j]&&V[u][j]&&dist[u]!=INT_MAX&&dist[u]+V[u][j]<dist[j]) 
        dist[j]=dist[u]+V[u][j];
    }
    printf("%d\n", dist[len-1]);
}

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& v, int k) {
        sort(v.begin(), v.end());
        int n=v.size();
        if((k>0&&k>4*v[n-1])||(k<0&&k<4*v[0])) return {}; 
        set<vector<int>> st;
        unordered_map<int, int> mp;
        for(int i=0;i<n;mp[v[i++]]=i);
        for(int i=0;i<n;++i)
            for(int j=i+1;j<n;++j)
                for(int l=j+1;l<n;++l){
                    int t=k-v[i]-v[j]-v[l];
                    if(t<v[l]) break;
                    auto itr=mp.find(t);
                    if(itr==mp.end()||itr->second<=l) continue;
                    st.insert({v[i], v[j], v[l], t});
                }
        return vector<vector<int>>(begin(st), end(st));
    }
};

#define MAXN 301
#define INF 0x3f3f3f3f
#define cnt(a) (c[F(a)])
class Solution{
    int n, p[MAXN], c[MAXN];
    int F(int a){
        if(a==p[a]) return a;
        else{
            c[p[a]]+=c[a];
            c[a]=0;
            return p[a]=F(p[a]);
        }
    }
    void M(int a, int b){
        a=F(a);
        b=F(b);
        if(c[a]>=c[b]) swap(a, b);
		p[a]=b;
        F(a);
    }
public:
    int minMalwareSpread(vector<vector<int>>& G, vector<int>& vi) {
        n=G.size();
        for(int i=0;i<n;c[i]=1, p[i]=i, ++i);
        for(int i=0;i<n;++i) for(int j=i+1;j<n;++j) if(G[i][j]) M(i, j);
        int cp[n]={0}, mx=-INF, ind=n+1;
		for(int i=0;i<vi.size();++cp[F(vi[i++])]);
		for(int i=0;i<vi.size();++i)
			if(cp[F(vi[i])]<=1&&(cnt(vi[i])>mx||cnt(vi[i])==mx&&vi[i]<ind)) mx=cnt(vi[i]), ind=vi[i];
            else if(mx<=0&&vi[i]<ind) mx=0, ind=vi[i];
        return ind;
    }
};

/*************************************
In the city of Hypothetia, besides the sidewalk there are either fire hydrants or underground drainage in a row. Each of the fire hydrant has a capacity of 1 tonne of water, and when burst has power to spray water upto k meters in either directions. The drainage containers are disjointed and can each store upto 1 tonne of water.
Since the sidewalk is on the hill, when the fire hydrant bursts, if there's no empty drainage in the fire hydrant's range, the water flows perpendicularly and thus, is wasted.
Given the layout of the sidewalk, if all the fire hydrants burst together we need to know if and how much water will be wasted.

Input Format
The first line will contain the integer k, the power of the fire hydrants. The second line will contain a string with either F for fire hydrant, or D for drainage container.

Constraints
1 <= k <= 10 1 <= string length <= 1000

Output Format
Single integer for the water wasted in tonnes.

Sample Input 0
1
DFFDF

Sample Output 0
1

Explanation 0
There are three fire hydrants and two drains. Since k is 1, the fire hydrant on index 1 can have all of its water conserved in the drainage at index 0.
Similarly, fire hydrant on index 2 or 4 can have their water conserved(partially) in the drainage at index 3.
But since the drainage's capacity is 1 tonne, 1 tonne of water is wasted collectively from fire hydrants at index 2 and 4.

Sample Input 1
2
DDFFDF

Sample Output 1
0

Explanation 1
Since the power of fire hydrants is 2, the fire hydrant at index 2 can have all of its water conserved in the drainage at index 0(or 1, but we save it for other hydrants).
Similarly, the fire hydrant at index 3 can have its water conserved in the drainage at index 1, while the drainage at index 4 can conserve water from hydrant at index 5.
Hence, there's no wastage of water and the final answer is 0.
*************************************/
#include <bits/stdc++.h>
using namespace std;
int k, d, f, rst, len;
string s;
int nD(char c, int i){
    for(int a=i;a<len;++a) if(s[a]==c) return a;
    return -1;
}
int main() { 
    cin>>k>>s;
    len=s.length();
    for(int i=0;i<len;++i) if(s[i]=='F') ++rst;
    d=nD('D', 0), f=nD('F', 0);
    while(d!=-1&&f!=-1)
        if(abs(d-f)<=k){
            --rst;
            d=nD('D', d+1), f=nD('F', f+1);
        }else if(d-f>k) f=nD('F', f+1);
        else if(f-d>k) d=nD('D', d+1);
    cout<<rst;
    return 0;
}

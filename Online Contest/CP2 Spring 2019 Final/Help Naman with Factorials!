/*******************************************************
Naman being a notorious student was troubling the professor in class when suddenly the professor singled him out and asked him a question. He gave Naman a number N and Naman has to come up with the smallest number M which contains at-least N number of zeros at the end of M! (factorial of M). Help Naman come out of the sticky situation.

Input Format
The first line contains an integer T i.e. the number of Test cases. Next T lines will contain an integer N.

Constraints
1 ≤ T ≤ 100 1 ≤ n ≤ 10^16

Output Format
Print smallest such number M.

Sample Input 0
3
1
2
3

Sample Output 0
5
10
15

Explanation 0
As 4! = 24 and 5! = 120, so minimum value of m will be 5.
As 9! = 362880 and 10! = 3628800, so minimum value of m will be 10.
As 14! = 87178291200 and 15! = 1307674368000, so minimum value of m will be 15.

*******************************************************/
#include <bits/stdc++.h>
using namespace std;
#define LL long long
const LL MAXN=1000000000;
LL run(LL x){
    LL rst=0, a=5, b=0;
    b=x/a;
    a*=5;
    rst+=b;
    for(;b;rst+=b){
        b=x/a;
        a*=5;
    }
    return rst;
}
int main(){
    int T;
    cin>>T;
    while(T--){
        LL n;
        cin>>n;
        LL l=1, r=MAXN*MAXN;
        for(LL m=(l+r)/2;r-l>1;m=(l+r)/2)
            if(run(m)<n) l=m;
            else r=m;
        cout<<r<<endl;
    }
}
